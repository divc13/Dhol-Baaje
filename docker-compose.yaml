version: '3.9'

services:
  shankhnaad:
    image: shankhnaad
    build:
      context: .
      dockerfile: ./apps/shankhnaad/Dockerfile
    depends_on:
      - fluree-ledger
      - blockfrost
    ports:
      - 4000:3000
    environment:
      FLUREE_URL: ${FLUREE_URL}
      FLUREE_LEDGER: local/shankhnaad
      FLUREE_AUTO_UPDATE_SCHEMA: ${FLUREE_AUTO_UPDATE_SCHEMA}
      FLUREE_ROOT_PRIVATE_KEY: ${FLUREE_ROOT_PRIVATE_KEY}
      FLUREE_OPEN_API: ${FLUREE_OPEN_API}
      CARDANO_WALLET_URL: ${CARDANO_WALLET_URL}
      CARDANO_WALLET_ID: ${CARDANO_WALLET_ID}
      CARDANO_WALLET_MNEMONIC: ${CARDANO_WALLET_MNEMONIC}
      CARDANO_WALLET_ADDRESS: ${CARDANO_WALLET_ADDRESS}
      CARDANO_NETWORK: ${CARDANO_NETWORK}
      BLOCKFROST_URL: ${BLOCKFROST_URL}
      BLOCKFROST_CONFIG_DBSYNC_HOST: ${DB_HOST_NAME}
      BLOCKFROST_CONFIG_SERVER_LISTEN_ADDRESS: ${BLOCKFROST_DOCKER_ADDRESS}
      NODE_APP_INSTANCE: 'default'
      BLOCKFROST_CONFIG_DBSYNC_USER: ${DB_USER}
      BLOCKFROST_CONFIG_DBSYNC_DATABASE: ${DB_NAME}
      PGPASSWORD: ${DB_PASSWORD}
      BLOCKFROST_CONFIG_NETWORK: ${CARDANO_NETWORK}
      CARDANO_SUBMIT_API_URL: ${CARDANO_SUBMIT_API_URL}
      BLOCKFROST_DOCKER_ADDRESS: ${BLOCKFROST_DOCKER_ADDRESS}


  fluree-ledger:
    image: fluree/ledger:1.0.3
    ports:
      - 8090:8090
    volumes:
      - fluree-data:/var/lib/fluree

  postgres:
    image: postgres:11.5-alpine
    environment:
      - POSTGRES_LOGGING=true
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'

  cardano-wallet:
    image: inputoutput/cardano-wallet:2022.12.14
    volumes:
      - wallet-data:/wallet-db
      - node-ipc:/ipc
    ports:
      - 7070:8090
    entrypoint: []
    command: bash -c "
        $$CMD --testnet /config/preview/genesis-byron.json
      "
    environment:
      CMD: "cardano-wallet serve --node-socket /ipc/node.socket --database /wallet-db --listen-address 0.0.0.0"
      NETWORK: ${CARDANO_NETWORK}
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        compress: "true"
        max-file: "10"
        max-size: "200k"

  cardano-submit-api:
    image: inputoutput/cardano-submit-api:1.35.5
    environment:
      - NETWORK=${CARDANO_NETWORK}
    depends_on:
      - cardano-node
    volumes:
      - node-ipc:/node-ipc
    ports:
      - 9090:8090
    restart: on-failure
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'

  cardano-node:
    image: inputoutput/cardano-node:1.35.4
    environment:
      - NETWORK=${CARDANO_NETWORK}
      - CARDANO_NODE_SOCKET_PATH=${CARDANO_NODE_SOCKET_PATH}
    ports:
      - 3001:3001
    volumes:
      - node-db:/data
      - node-ipc:/ipc
    restart: on-failure
    healthcheck:
      test: ['CMD-SHELL', 'curl -f 127.0.0.1:12788 || exit 1']
      interval: 60s
      timeout: 10s
      retries: 5
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'

  cardano-db-sync:
    image: inputoutput/cardano-db-sync:13.0.5-extra-args
    environment:
      - NETWORK=${CARDANO_NETWORK}
      - POSTGRES_HOST=${DB_HOST_NAME}
      - POSTGRES_PORT=${DB_PORT_NUMBER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - RESTORE_SNAPSHOT=${RESTORE_SNAPSHOT:-}
      - RESTORE_RECREATE_DB=N
      - EXTRA_DB_SYNC_ARGS=${EXTRA_DB_SYNC_ARGS:-}
    ports:
      - 3002:3002
    depends_on:
      cardano-node:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - db-sync-data:/var/lib/cexplorer
      - node-ipc:/node-ipc
    restart: on-failure
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'

  blockfrost:
    image: blockfrost/backend-ryo:v1.4.0
    command:
      - /bin/sh
      - -c
      - $$(nix-build -A blockfrost-backend --no-out-link)/bin/blockfrost-backend
    environment:
      - BLOCKFROST_CONFIG_DBSYNC_HOST=${DB_HOST_NAME}
      - BLOCKFROST_CONFIG_SERVER_LISTEN_ADDRESS=${BLOCKFROST_DOCKER_ADDRESS}
      - NODE_APP_INSTANCE=default
      - BLOCKFROST_CONFIG_DBSYNC_USER=${DB_USER}
      - BLOCKFROST_CONFIG_DBSYNC_DATABASE=${DB_NAME}
      - PGPASSWORD=${DB_PASSWORD}
      - BLOCKFROST_CONFIG_NETWORK=${CARDANO_NETWORK}
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./config/blockfrost_config:/app/config
    restart: on-failure
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'

  shankhnaad_app:
    image: shankhnaad_app
    build:
      context: .
      dockerfile: ./ShankhNaad/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GRAPHQL_SERVER_URL=http://localhost:4000/graphql
      - GATEWAY=${GATEWAY}
      - PINATA_JWT=${PINATA_JWT}
      - PINATA_API_SECRET=${PINATA_API_SECRET}
      - PINATA_API_KEY=${PINATA_API_KEY}
      - CARDANO_WALLET_ADDRESS=${CARDANO_WALLET_ADDRESS}
      - CARDANO_SPACED_MNEMONIC=${CARDANO_SPACED_MNEMONIC}
    depends_on:
      - shankhnaad

volumes:
  fluree-data:
  db-sync-data:
  postgres:
  node-db:
  node-ipc:
  wallet-data: